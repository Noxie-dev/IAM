"""Initial schema migration - Phase 2 Backend Enhancement

Revision ID: ee6194e78f0a
Revises: 
Create Date: 2025-08-26 17:58:30.262906

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee6194e78f0a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('meetings', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('meetings', 'meeting_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('meetings', 'transcription_metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               nullable=False)
    op.alter_column('meetings', 'processing_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=False)
    op.alter_column('meetings', 'processing_started_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('meetings', 'processing_completed_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('meetings', 'transcription_cost',
               existing_type=sa.NUMERIC(precision=10, scale=4),
               server_default=None,
               nullable=False)
    op.alter_column('meetings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('meetings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_meetings_created_at', table_name='meetings')
    op.drop_index('idx_meetings_status', table_name='meetings')
    op.drop_index('idx_meetings_user_created', table_name='meetings')
    op.drop_index('idx_meetings_user_id', table_name='meetings')
    op.create_index(op.f('ix_meetings_created_at'), 'meetings', ['created_at'], unique=False)
    op.create_index(op.f('ix_meetings_id'), 'meetings', ['id'], unique=False)
    op.create_index(op.f('ix_meetings_processing_status'), 'meetings', ['processing_status'], unique=False)
    op.create_index(op.f('ix_meetings_user_id'), 'meetings', ['user_id'], unique=False)
    op.add_column('payment_transactions', sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False))
    op.add_column('payment_transactions', sa.Column('gateway', sa.String(length=50), nullable=False))
    op.add_column('payment_transactions', sa.Column('gateway_transaction_id', sa.String(length=255), nullable=True))
    op.add_column('payment_transactions', sa.Column('subscription_tier', sa.String(length=50), nullable=False))
    op.add_column('payment_transactions', sa.Column('billing_period_start', sa.DateTime(timezone=True), nullable=False))
    op.add_column('payment_transactions', sa.Column('billing_period_end', sa.DateTime(timezone=True), nullable=False))
    op.alter_column('payment_transactions', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('payment_transactions', 'currency',
               existing_type=sa.VARCHAR(length=3),
               server_default=None,
               nullable=False)
    op.alter_column('payment_transactions', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=False)
    op.alter_column('payment_transactions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('payment_transactions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_transactions_created_at', table_name='payment_transactions')
    op.drop_index('idx_transactions_status', table_name='payment_transactions')
    op.drop_index('idx_transactions_user_id', table_name='payment_transactions')
    op.create_index(op.f('ix_payment_transactions_id'), 'payment_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_payment_transactions_user_id'), 'payment_transactions', ['user_id'], unique=False)
    op.drop_column('payment_transactions', 'provider_reference')
    op.drop_column('payment_transactions', 'provider')
    op.drop_column('payment_transactions', 'provider_transaction_id')
    op.drop_column('payment_transactions', 'payment_method')
    op.drop_column('payment_transactions', 'amount_zar')
    op.drop_column('payment_transactions', 'metadata')
    op.drop_column('payment_transactions', 'amount_usd')
    op.add_column('subscription_plans', sa.Column('description', sa.Text(), nullable=True))
    op.alter_column('subscription_plans', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('subscription_plans', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('subscription_plans', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('subscription_plans', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_subscription_plans_id'), 'subscription_plans', ['id'], unique=False)
    op.create_unique_constraint(op.f('uq_subscription_plans_tier'), 'subscription_plans', ['tier'])
    op.drop_column('subscription_plans', 'max_concurrent_uploads')
    op.drop_column('subscription_plans', 'features')
    op.add_column('system_config', sa.Column('id', sa.UUID(), nullable=False))
    op.add_column('system_config', sa.Column('category', sa.String(length=100), nullable=True))
    op.add_column('system_config', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('system_config', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('system_config', 'key',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('system_config', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_system_config_category'), 'system_config', ['category'], unique=False)
    op.create_index(op.f('ix_system_config_id'), 'system_config', ['id'], unique=False)
    op.create_index(op.f('ix_system_config_key'), 'system_config', ['key'], unique=True)
    op.alter_column('usage_analytics', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('usage_analytics', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('usage_analytics', 'event_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               nullable=False)
    op.alter_column('usage_analytics', 'session_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('usage_analytics', 'ip_address',
               existing_type=postgresql.INET(),
               type_=sa.String(length=45),
               existing_nullable=True)
    op.alter_column('usage_analytics', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_analytics_created_at', table_name='usage_analytics')
    op.drop_index('idx_analytics_event_type', table_name='usage_analytics')
    op.drop_index('idx_analytics_user_id', table_name='usage_analytics')
    op.create_index(op.f('ix_usage_analytics_created_at'), 'usage_analytics', ['created_at'], unique=False)
    op.create_index(op.f('ix_usage_analytics_event_type'), 'usage_analytics', ['event_type'], unique=False)
    op.create_index(op.f('ix_usage_analytics_id'), 'usage_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_usage_analytics_user_id'), 'usage_analytics', ['user_id'], unique=False)
    op.alter_column('user_sessions', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('user_sessions', 'device_info',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('user_sessions', 'ip_address',
               existing_type=postgresql.INET(),
               type_=sa.String(length=45),
               existing_nullable=True)
    op.alter_column('user_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('user_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_sessions_expires_at', table_name='user_sessions')
    op.drop_index('idx_sessions_token_hash', table_name='user_sessions')
    op.drop_index('idx_sessions_user_id', table_name='user_sessions')
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'subscription_tier',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'subscription_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'subscription_start_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'subscription_end_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'trial_end_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'monthly_transcription_minutes',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'total_transcription_minutes',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'email_verified',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_subscription_tier', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_subscription_tier'), 'users', ['subscription_tier'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_subscription_tier'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('idx_users_subscription_tier', 'users', ['subscription_tier'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=True)
    op.alter_column('users', 'email_verified',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               nullable=True)
    op.alter_column('users', 'last_login',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'total_transcription_minutes',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=True)
    op.alter_column('users', 'monthly_transcription_minutes',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=True)
    op.alter_column('users', 'trial_end_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'subscription_end_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'subscription_start_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'subscription_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'active'::character varying"),
               nullable=True)
    op.alter_column('users', 'subscription_tier',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'free'::character varying"),
               nullable=True)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.create_index('idx_sessions_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_index('idx_sessions_token_hash', 'user_sessions', ['token_hash'], unique=False)
    op.create_index('idx_sessions_expires_at', 'user_sessions', ['expires_at'], unique=False)
    op.alter_column('user_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=True)
    op.alter_column('user_sessions', 'ip_address',
               existing_type=sa.String(length=45),
               type_=postgresql.INET(),
               existing_nullable=True)
    op.alter_column('user_sessions', 'device_info',
               existing_type=sa.Text(),
               server_default=sa.text("'{}'::jsonb"),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('user_sessions', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_index(op.f('ix_usage_analytics_user_id'), table_name='usage_analytics')
    op.drop_index(op.f('ix_usage_analytics_id'), table_name='usage_analytics')
    op.drop_index(op.f('ix_usage_analytics_event_type'), table_name='usage_analytics')
    op.drop_index(op.f('ix_usage_analytics_created_at'), table_name='usage_analytics')
    op.create_index('idx_analytics_user_id', 'usage_analytics', ['user_id'], unique=False)
    op.create_index('idx_analytics_event_type', 'usage_analytics', ['event_type'], unique=False)
    op.create_index('idx_analytics_created_at', 'usage_analytics', ['created_at'], unique=False)
    op.alter_column('usage_analytics', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('usage_analytics', 'ip_address',
               existing_type=sa.String(length=45),
               type_=postgresql.INET(),
               existing_nullable=True)
    op.alter_column('usage_analytics', 'session_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('usage_analytics', 'event_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               nullable=True)
    op.alter_column('usage_analytics', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('usage_analytics', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_index(op.f('ix_system_config_key'), table_name='system_config')
    op.drop_index(op.f('ix_system_config_id'), table_name='system_config')
    op.drop_index(op.f('ix_system_config_category'), table_name='system_config')
    op.alter_column('system_config', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('system_config', 'key',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('system_config', 'created_at')
    op.drop_column('system_config', 'is_active')
    op.drop_column('system_config', 'category')
    op.drop_column('system_config', 'id')
    op.add_column('subscription_plans', sa.Column('features', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('subscription_plans', sa.Column('max_concurrent_uploads', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('uq_subscription_plans_tier'), 'subscription_plans', type_='unique')
    op.drop_index(op.f('ix_subscription_plans_id'), table_name='subscription_plans')
    op.alter_column('subscription_plans', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('subscription_plans', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('subscription_plans', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=True)
    op.alter_column('subscription_plans', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_column('subscription_plans', 'description')
    op.add_column('payment_transactions', sa.Column('amount_usd', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('payment_transactions', sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('payment_transactions', sa.Column('amount_zar', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.add_column('payment_transactions', sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('payment_transactions', sa.Column('provider_transaction_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('payment_transactions', sa.Column('provider', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('payment_transactions', sa.Column('provider_reference', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_payment_transactions_user_id'), table_name='payment_transactions')
    op.drop_index(op.f('ix_payment_transactions_id'), table_name='payment_transactions')
    op.create_index('idx_transactions_user_id', 'payment_transactions', ['user_id'], unique=False)
    op.create_index('idx_transactions_status', 'payment_transactions', ['status'], unique=False)
    op.create_index('idx_transactions_created_at', 'payment_transactions', ['created_at'], unique=False)
    op.alter_column('payment_transactions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('payment_transactions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('payment_transactions', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'pending'::character varying"),
               nullable=True)
    op.alter_column('payment_transactions', 'currency',
               existing_type=sa.VARCHAR(length=3),
               server_default=sa.text("'ZAR'::character varying"),
               nullable=True)
    op.alter_column('payment_transactions', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    op.drop_column('payment_transactions', 'billing_period_end')
    op.drop_column('payment_transactions', 'billing_period_start')
    op.drop_column('payment_transactions', 'subscription_tier')
    op.drop_column('payment_transactions', 'gateway_transaction_id')
    op.drop_column('payment_transactions', 'gateway')
    op.drop_column('payment_transactions', 'amount')
    op.drop_index(op.f('ix_meetings_user_id'), table_name='meetings')
    op.drop_index(op.f('ix_meetings_processing_status'), table_name='meetings')
    op.drop_index(op.f('ix_meetings_id'), table_name='meetings')
    op.drop_index(op.f('ix_meetings_created_at'), table_name='meetings')
    op.create_index('idx_meetings_user_id', 'meetings', ['user_id'], unique=False)
    op.create_index('idx_meetings_user_created', 'meetings', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_meetings_status', 'meetings', ['processing_status'], unique=False)
    op.create_index('idx_meetings_created_at', 'meetings', ['created_at'], unique=False)
    op.alter_column('meetings', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('meetings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('meetings', 'transcription_cost',
               existing_type=sa.NUMERIC(precision=10, scale=4),
               server_default=sa.text('0.00'),
               nullable=True)
    op.alter_column('meetings', 'processing_completed_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('meetings', 'processing_started_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('meetings', 'processing_status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'pending'::character varying"),
               nullable=True)
    op.alter_column('meetings', 'transcription_metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               nullable=True)
    op.alter_column('meetings', 'meeting_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('meetings', 'id',
               existing_type=sa.UUID(),
               server_default=sa.text('uuid_generate_v4()'),
               existing_nullable=False)
    # ### end Alembic commands ###
